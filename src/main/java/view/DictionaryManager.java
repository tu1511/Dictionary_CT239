/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package view;



import java.awt.*;
import java.awt.event.*;
import java.io.*;
import java.util.ArrayList;
import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import javax.swing.JFrame;
/**
 *
 * @author LENOVO
 */
public class DictionaryManager extends javax.swing.JFrame {

    /**
     * Creates new form DictionaryManager
     */
    public DictionaryManager() {
        initComponents();
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        setLocationRelativeTo(null);
        
        // Gọi phương thức để load dữ liệu khi ứng dụng được khởi động
        loadDataFromFile();
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenu2 = new javax.swing.JMenu();
        jLabel1 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        label_TiengAnh = new javax.swing.JLabel();
        label_LoaiTu = new javax.swing.JLabel();
        tF_LoaiTu = new javax.swing.JTextField();
        label_TiengViet = new javax.swing.JLabel();
        tF_TiengViet = new javax.swing.JTextField();
        label_ViDu = new javax.swing.JLabel();
        tF_TViDu = new javax.swing.JTextField();
        btn_Save = new javax.swing.JButton();
        btn_Cancer = new javax.swing.JButton();
        btn_Add = new javax.swing.JButton();
        btn_Update = new javax.swing.JButton();
        btn_reload = new javax.swing.JButton();
        btn_Delete = new javax.swing.JButton();
        btn_Exit = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        table_Data = new javax.swing.JTable();
        tF_tiengAnh = new javax.swing.JTextField();

        jLabel2.setText("jLabel2");

        jMenu1.setText("File");
        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edit");
        jMenuBar1.add(jMenu2);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Quản lý tự điển");
        setMinimumSize(new java.awt.Dimension(850, 604));
        setPreferredSize(new java.awt.Dimension(863, 605));
        setSize(new java.awt.Dimension(850, 604));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel1.setText("QUẢN LÝ TỰ ĐIỂN");

        label_TiengAnh.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        label_TiengAnh.setText("Từ tiếng Anh :");

        label_LoaiTu.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        label_LoaiTu.setText("Loại từ :");

        tF_LoaiTu.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        label_TiengViet.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        label_TiengViet.setText("Nghĩa tiếng Việt :");

        label_ViDu.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        label_ViDu.setText("Ví dụ : ");

        btn_Save.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btn_Save.setText("Lưu");

        btn_Cancer.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btn_Cancer.setText("Hủy");

        btn_Add.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btn_Add.setText("Thêm từ");
        btn_Add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_AddActionPerformed(evt);
            }
        });

        btn_Update.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btn_Update.setText("Cập nhật từ");
        btn_Update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_UpdateActionPerformed(evt);
            }
        });

        btn_reload.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btn_reload.setText("Reload");
        btn_reload.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_reloadActionPerformed(evt);
            }
        });

        btn_Delete.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btn_Delete.setText("Xóa từ");

        btn_Exit.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btn_Exit.setText("Thoát");

        table_Data.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        table_Data.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "STT", "Từ tiếng Anh", "Loại từ", "Nghĩa", "Ví dụ"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Double.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(table_Data);

        tF_tiengAnh.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(47, 47, 47)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(tF_TViDu, javax.swing.GroupLayout.PREFERRED_SIZE, 605, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(label_ViDu)
                                .addGap(379, 379, 379))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(tF_tiengAnh, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(33, 33, 33)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(label_LoaiTu)
                                    .addComponent(tF_LoaiTu, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(32, 32, 32))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(label_TiengAnh)
                                .addGap(332, 332, 332)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(tF_TiengViet, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(label_TiengViet))))
                .addGap(66, 66, 66)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btn_Save, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_Cancer, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(311, 311, 311)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 823, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(47, 47, 47)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btn_reload, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(39, 39, 39)
                                .addComponent(btn_Add, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(40, 40, 40)
                                .addComponent(btn_Update, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(38, 38, 38)
                                .addComponent(btn_Delete, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btn_Exit, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 741, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addComponent(jLabel1)
                .addGap(6, 6, 6)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(label_TiengAnh, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(label_TiengViet, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(label_LoaiTu, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(5, 5, 5)
                        .addComponent(tF_tiengAnh, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, 0)
                        .addComponent(label_ViDu))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(tF_TiengViet, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tF_LoaiTu, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btn_Save, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(6, 6, 6)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(tF_TViDu, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_Cancer, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_Add, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_reload, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_Update, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_Delete, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_Exit, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 12, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 234, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(22, 22, 22))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
//    chức năng thêm từ
    private void btn_AddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_AddActionPerformed
        String tiengAnh = tF_tiengAnh.getText();
        String loaiTu = tF_LoaiTu.getText();
        String tiengViet = tF_TiengViet.getText();
        String viDu = tF_TViDu.getText();

        String data = tiengAnh + "-" + loaiTu + "-" + tiengViet + "-" + viDu + "-false";
        try {
            FileWriter writer = new FileWriter("data.txt", true);
            writer.write(data + "\n");
            writer.close();
            JOptionPane.showMessageDialog(null, "Dữ liệu đã được thêm vào tệp tin!", "Thông báo", JOptionPane.INFORMATION_MESSAGE);
        
            // Load lại dữ liệu lên bảng sau khi thêm từ mới
            loadDataFromFile();
        } catch (IOException ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(null, "Đã xảy ra lỗi khi ghi dữ liệu vào tệp tin!", "Lỗi", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btn_AddActionPerformed
//Chức năng reload
    private void btn_reloadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_reloadActionPerformed
        tF_tiengAnh.setText("");
        tF_LoaiTu.setText("");
        tF_TiengViet.setText("");
        tF_TViDu.setText("");
    }//GEN-LAST:event_btn_reloadActionPerformed
//chức năng chọn vào một dòng trên bảng rồi lấy dữ liệu
    private void table_DataMouseClicked(java.awt.event.MouseEvent evt) {                                       
        // Lấy chỉ số của dòng được chọn
        int selectedRow = table_Data.getSelectedRow();
        if (selectedRow != -1) { // Đảm bảo có dòng được chọn
            // Lấy dữ liệu từ dòng được chọn và cập nhật lên các JTextField
            DefaultTableModel model = (DefaultTableModel) table_Data.getModel();
            tF_tiengAnh.setText(model.getValueAt(selectedRow, 1).toString());
            tF_LoaiTu.setText(model.getValueAt(selectedRow, 2).toString());
            tF_TiengViet.setText(model.getValueAt(selectedRow, 3).toString());
            tF_TViDu.setText(model.getValueAt(selectedRow, 4).toString());
        }
    }
//    Chức năng bấm đưa dữ liệu lên textfield
    private void btn_UpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_UpdateActionPerformed
        // Lấy chỉ số của dòng được chọn
      int selectedRow = table_Data.getSelectedRow();
      if (selectedRow != -1) { // Đảm bảo có dòng được chọn
          // Lấy dữ liệu từ dòng được chọn và hiển thị lên các JTextField
          DefaultTableModel model = (DefaultTableModel) table_Data.getModel();
          tF_tiengAnh.setText(model.getValueAt(selectedRow, 1).toString());
          tF_LoaiTu.setText(model.getValueAt(selectedRow, 2).toString());
          tF_TiengViet.setText(model.getValueAt(selectedRow, 3).toString());
          tF_TViDu.setText(model.getValueAt(selectedRow, 4).toString());
      }
    }//GEN-LAST:event_btn_UpdateActionPerformed
    
   
<<<<<<< HEAD
 private void btn_DeleteActionPerformed(java.awt.event.ActionEvent evt) {                                           
    // Lấy chỉ số của dòng được chọn
    int selectedRow = table_Data.getSelectedRow();
    if (selectedRow != -1) { // Đảm bảo có dòng được chọn
        // Lấy từ tiếng Anh của dòng được chọn
        String tiengAnh = table_Data.getValueAt(selectedRow, 1).toString();

        try {
            BufferedReader br = new BufferedReader(new FileReader("data.txt"));
            BufferedWriter bw = new BufferedWriter(new FileWriter("temp.txt"));

            String line;
            while ((line = br.readLine()) != null) {
                String[] parts = line.split("-");
                // Ghi tất cả các dòng ngoại trừ dòng cần xóa vào tệp tạm thời
                if (!parts[1].equals(tiengAnh)) {
                    bw.write(line + "\n");
                }
            }
            br.close();
            bw.close();

            // Xóa tệp gốc (data.txt)
            File originalFile = new File("data.txt");
            if (originalFile.delete()) {
                // Đổi tên tệp tạm thời thành tên tệp gốc
                File tempFile = new File("temp.txt");
                if (!tempFile.renameTo(originalFile)) {
                    throw new IOException("Could not rename temp file to original file");
                }
                JOptionPane.showMessageDialog(null, "Dữ liệu đã được xóa khỏi tệp tin!", "Thông báo", JOptionPane.INFORMATION_MESSAGE);

                // Load lại dữ liệu từ tệp tin sau khi xóa
                loadDataFromFile();
                
                // Xóa dữ liệu trên các JTextField
                tF_tiengAnh.setText("");
                tF_LoaiTu.setText("");
                tF_TiengViet.setText("");
                tF_TViDu.setText("");
            } else {
                throw new IOException("Could not delete original file");
            }
        } catch (IOException ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(null, "Đã xảy ra lỗi khi xóa dữ liệu từ tệp tin!", "Lỗi", JOptionPane.ERROR_MESSAGE);
        }
    } else {
        JOptionPane.showMessageDialog(null, "Vui lòng chọn một dòng để xóa!", "Thông báo", JOptionPane.WARNING_MESSAGE);
    }
}


=======
    private void btn_DeleteActionPerformed(java.awt.event.ActionEvent evt) {                                           
        // Lấy chỉ số của dòng được chọn
        int selectedRow = table_Data.getSelectedRow();
        if (selectedRow != -1) { // Đảm bảo có dòng được chọn
            // Lấy từ tiếng Anh của dòng được chọn
            String tiengAnh = table_Data.getValueAt(selectedRow, 1).toString();

            // Tạo một tệp tạm thời để ghi dữ liệu
            File tempFile = new File("temp.txt");

            try {
                BufferedReader br = new BufferedReader(new FileReader("data.txt"));
                BufferedWriter bw = new BufferedWriter(new FileWriter(tempFile));

                String line;
                while ((line = br.readLine()) != null) {
                    String[] parts = line.split("-");
                    // Ghi tất cả các dòng ngoại trừ dòng cần xóa vào tệp tạm thời
                    if (!parts[0].equals(tiengAnh)) {
                        bw.write(line + "\n");
                    }
                }
                br.close();
                bw.close();

                // Xóa tệp gốc
                File originalFile = new File("data.txt");
                if (originalFile.delete()) {
                    // Đổi tên tệp tạm thời thành tên tệp gốc
                    if (!tempFile.renameTo(originalFile)) {
                        throw new IOException("Could not rename temp file to original file");
                    }
                    JOptionPane.showMessageDialog(null, "Dữ liệu đã được xóa khỏi tệp tin!", "Thông báo", JOptionPane.INFORMATION_MESSAGE);

                    // Load lại dữ liệu từ tệp tin sau khi xóa
                    loadDataFromFile();
                } else {
                    throw new IOException("Could not delete original file");
                }
            } catch (IOException ex) {
                ex.printStackTrace();
                JOptionPane.showMessageDialog(null, "Đã xảy ra lỗi khi xóa dữ liệu từ tệp tin!", "Lỗi", JOptionPane.ERROR_MESSAGE);
            }
        } else {
            JOptionPane.showMessageDialog(null, "Vui lòng chọn một dòng để xóa!", "Thông báo", JOptionPane.WARNING_MESSAGE);
        }
    }
>>>>>>> 6869b4ab278d134d3b7b7d923e4484a2b3db0186



//    Chức năng load dữ liệu từ file lưu trữ lên
    private void loadDataFromFile() {
        DefaultTableModel model = (DefaultTableModel) table_Data.getModel();
        model.setRowCount(0); // Xóa dữ liệu cũ trước khi load dữ liệu mới

        try {
            File file = new File("data.txt");
            BufferedReader br = new BufferedReader(new FileReader(file));

            String line;
            while ((line = br.readLine()) != null) {
                String[] rowData = line.split("-");
                Object[] row = new Object[rowData.length + 1];
                row[0] = model.getRowCount() + 1; // Số thứ tự
                System.arraycopy(rowData, 0, row, 1, rowData.length);
                model.addRow(row);
            }

            br.close();
        } catch (IOException ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(null, "Đã xảy ra lỗi khi đọc dữ liệu từ tệp tin!", "Lỗi", JOptionPane.ERROR_MESSAGE);
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DictionaryManager.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DictionaryManager.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DictionaryManager.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DictionaryManager.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new DictionaryManager().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_Add;
    private javax.swing.JButton btn_Cancer;
    private javax.swing.JButton btn_Delete;
    private javax.swing.JButton btn_Exit;
    private javax.swing.JButton btn_Save;
    private javax.swing.JButton btn_Update;
    private javax.swing.JButton btn_reload;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JLabel label_LoaiTu;
    private javax.swing.JLabel label_TiengAnh;
    private javax.swing.JLabel label_TiengViet;
    private javax.swing.JLabel label_ViDu;
    private javax.swing.JTextField tF_LoaiTu;
    private javax.swing.JTextField tF_TViDu;
    private javax.swing.JTextField tF_TiengViet;
    private javax.swing.JTextField tF_tiengAnh;
    private javax.swing.JTable table_Data;
    // End of variables declaration//GEN-END:variables
}
